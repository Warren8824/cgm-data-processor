{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"CGM Data Processor <p>A robust Python framework for processing and analyzing diabetes device data</p> <p> </p>"},{"location":"#process-your-diabetes-data","title":"\ud83d\udcc8 Process Your Diabetes Data","text":"<p>Analyze data from multiple diabetes management systems including XDrip+, Dexcom, and Freestyle Libre. Handle CGM readings, insulin doses, carbs, and treatment notes with confidence.</p>"},{"location":"#cgm-analysis","title":"\ud83e\ude78 CGM Analysis","text":"<ul> <li>Gap detection</li> <li>Noise filtering</li> <li>Quality metrics</li> </ul>"},{"location":"#treatment-data","title":"\ud83d\udc89 Treatment Data","text":"<ul> <li>Insulin doses</li> <li>Carb intake</li> <li>Event notes</li> </ul>"},{"location":"#advanced-features","title":"\ud83d\ude80 Advanced Features","text":"<ul> <li>Automated format detection</li> <li>Data alignment</li> <li>Flexible export options</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>from src.core.format_registry import FormatRegistry\nfrom src.file_parser.format_detector import FormatDetector\nfrom src.processors import DataProcessor\n\n# Initialize format detection\nregistry = FormatRegistry()\ndetector = FormatDetector(registry)\n\n# Process file\nformat, _, _ = detector.detect_format(\"my_data.sqlite\")\nprocessed_data = process_file(\"my_data.sqlite\")\n</code></pre>"},{"location":"#key-features","title":"\ud83d\udca1 Key Features","text":"<ul> <li>Automated format detection for multiple data sources</li> <li>Robust data validation and cleaning</li> <li>Gap detection and interpolation for CGM data</li> <li>Treatment classification and verification</li> <li>Flexible data export options</li> </ul>"},{"location":"#responsible-use","title":"\ud83d\udee1\ufe0f Responsible Use","text":"This tool is designed for data analysis only. Not intended for real-time monitoring or medical decision making. Always consult healthcare providers for medical advice."},{"location":"getting-started/","title":"Overview","text":"Getting Started with CGM Data Processor <p>Process your diabetes device data in minutes</p>"},{"location":"getting-started/#overview","title":"\ud83c\udfaf Overview","text":"<p>CGM Data Processor is a Python framework that helps you:</p> <ul> <li>Import data from multiple diabetes management systems</li> <li>Process and align CGM readings with treatment data</li> <li>Export cleaned, validated datasets for analysis</li> </ul>"},{"location":"getting-started/#requirements","title":"\ud83d\udccb Requirements","text":"<ul> <li>Python 3.10 or higher</li> <li>Supported data formats: SQLite, CSV, XML</li> <li>Basic Python knowledge for custom analysis</li> </ul>"},{"location":"getting-started/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<ul> <li>Installation Guide - Set up the package</li> <li>Basic Usage - Process your first dataset</li> <li>Data Import - Learn about supported formats</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":"Installation <p>Set up CGM Data Processor for development</p>"},{"location":"getting-started/installation/#development-setup","title":"\ud83d\udee0\ufe0f Development Setup","text":"<ul> <li>Python 3.10+ required</li> <li>Poetry for dependency management</li> <li>Git for version control</li> </ul> <pre><code># Clone repository\ngit clone https://github.com/Warren8824/cgm-data-processor.git\ncd cgm-data-processor\n\n# Install dependencies\npoetry install\n\n# Setup pre-commit hooks\npoetry run pre-commit install\n</code></pre> <p>\u2705 Verify Installation</p> <pre><code>from src.core.format_registry import FormatRegistry\n\n# Should print available formats\nregistry = FormatRegistry()\nprint(registry.formats)\n</code></pre>"},{"location":"getting-started/quickstart/basic/","title":"Basic Usage","text":"Basic Usage <p>Process and analyze your diabetes data</p>"},{"location":"getting-started/quickstart/basic/#command-line-usage","title":"\ud83d\ude80 Command Line Usage","text":"<ul> <li>Basic: <code>python -m src.cli data.sqlite</code></li> <li>Custom output: <code>python -m src.cli data.sqlite --output my_folder</code></li> <li>Debug mode: <code>python -m src.cli data.sqlite --debug</code></li> </ul>"},{"location":"getting-started/quickstart/basic/#processing-options","title":"\u2699\ufe0f Processing Options","text":"<pre><code>python -m src.cli data.sqlite \\\n    --interpolation-limit 6   # Max CGM gaps to fill (6 = 30 mins)\n    --bolus-limit 10.0       # Max bolus insulin units\n    --max-dose 20.0          # Max valid insulin dose\n    --output ./my_analysis   # Output location\n</code></pre>"},{"location":"getting-started/quickstart/basic/#parameter-guide","title":"\ud83d\udcca Parameter Guide","text":"<ul> <li><code>interpolation-limit</code>: Gaps larger than this won't be filled (default: 4 = 20 mins)</li> <li><code>bolus-limit</code>: Doses above this classified as basal (default: 8.0 units)</li> <li><code>max-dose</code>: Doses above this flagged as invalid (default: 15.0 units)</li> </ul>"},{"location":"getting-started/quickstart/import/","title":"Data Import","text":"Data Import <p>Supported formats and data sources</p>"},{"location":"getting-started/quickstart/import/#supported-devices","title":"\ud83d\udcf1 Supported Devices","text":"<ul> <li>XDrip+ (SQLite format)</li> <li>Dexcom (CSV format - coming soon)</li> <li>Freestyle Libre (CSV format - coming soon)</li> </ul>"},{"location":"getting-started/quickstart/import/#xdrip-export-guide","title":"\ud83d\udcbe XDrip+ Export Guide","text":"<ul> <li>Open XDrip+</li> <li>Navigate to Settings \u2192 Data Export</li> <li>Select \"Export Database\"</li> <li>Save the .sqlite file</li> </ul>"},{"location":"getting-started/quickstart/import/#data-requirements","title":"\ud83d\udd0d Data Requirements","text":"<ul> <li>CGM readings with timestamps</li> <li>Treatment records (insulin, carbs)</li> <li>No missing required columns</li> <li>Valid data ranges for readings</li> </ul>"},{"location":"getting-started/quickstart/processing/","title":"Data Processing","text":"Data Processing <p>Understanding and configuring data processing options</p>"},{"location":"getting-started/quickstart/processing/#processing-parameters","title":"\ud83d\udd04 Processing Parameters","text":"<ul> <li>CGM Gap Handling: How many missing readings to interpolate</li> <li>Insulin Classification: Thresholds for bolus vs basal</li> <li>Data Validation: Maximum valid insulin doses</li> </ul>"},{"location":"getting-started/quickstart/processing/#configuration-examples","title":"\u2699\ufe0f Configuration Examples","text":"<pre><code># Conservative gap filling (15 mins max)\npython -m src.cli data.sqlite --interpolation-limit 3\n\n# Higher insulin thresholds\npython -m src.cli data.sqlite --bolus-limit 12.0 --max-dose 25.0\n\n# Strict validation\npython -m src.cli data.sqlite --bolus-limit 6.0 --max-dose 12.0\n</code></pre>"},{"location":"getting-started/quickstart/processing/#output-structure","title":"\ud83d\udcca Output Structure","text":"<ul> <li>complete_dataset/: Full processed data with applied parameters</li> <li>monthly/: Split data maintaining processing settings</li> <li>processing_notes.json: Configuration and quality metrics</li> </ul>"},{"location":"user-guide/data-types/","title":"Data Types & Processing","text":"Data Types <p>Core data types and their processing</p>"},{"location":"user-guide/data-types/#cgm-data","title":"\ud83d\udcc8 CGM Data","text":"<ul> <li>5-minute glucose readings</li> <li>Gap detection and interpolation</li> <li>Units: mg/dL and mmol/L</li> <li>Quality metrics: completeness, noise levels</li> </ul>"},{"location":"user-guide/data-types/#insulin-data","title":"\ud83d\udc89 Insulin Data","text":"<ul> <li>Bolus: Meal and correction doses</li> <li>Basal: Long-acting background insulin</li> <li>Automatic classification based on dose size</li> <li>Metadata support for insulin types</li> </ul>"},{"location":"user-guide/data-types/#carbohydrate-data","title":"\ud83c\udf4e Carbohydrate Data","text":"<ul> <li>Meal entries in grams</li> <li>Timestamp alignment with insulin</li> <li>Minimum 1g threshold</li> </ul>"},{"location":"user-guide/data-types/#notes-data","title":"\ud83d\udcdd Notes Data","text":"<ul> <li>Treatment notes and events</li> <li>Timestamped annotations</li> <li>Flexible text storage</li> </ul>"},{"location":"user-guide/errors/","title":"Error Handling","text":"Error Handling <p>Common errors and troubleshooting</p>"},{"location":"user-guide/errors/#common-errors","title":"\u274c Common Errors","text":"<ul> <li>FormatDetectionError: File format not recognized</li> <li>DataProcessingError: Invalid or corrupt data</li> <li>AlignmentError: Cannot align datasets</li> <li>FileAccessError: Cannot read input file</li> </ul>"},{"location":"user-guide/errors/#troubleshooting","title":"\ud83d\udd0d Troubleshooting","text":"<pre><code># Enable debug mode for detailed errors\npython -m src.cli data.sqlite --debug\n\n# Common debug output:\n\u2713 Format Detection Successful\n\u2717 Data Reading Failed: Missing required columns\n   Details: Table 'BgReadings' missing 'calculated_value'\n</code></pre>"},{"location":"user-guide/errors/#data-validation-errors","title":"\ud83d\udeab Data Validation Errors","text":"<ul> <li>Invalid glucose values (outside 40-400 mg/dL)</li> <li>Insulin doses exceeding max_dose</li> <li>Missing timestamps or required fields</li> <li>Duplicate timestamps in CGM data</li> </ul>"},{"location":"user-guide/formats/","title":"Supported Formats","text":"Supported File Formats <p>Supported diabetes device data formats</p>"},{"location":"user-guide/formats/#xdrip-sqlite","title":"\ud83d\udcf1 XDrip+ SQLite","text":"<ul> <li>Default SQLite database from XDrip+</li> <li>Contains BgReadings and Treatments tables</li> <li>Full CGM and treatment data support</li> <li>Export: Settings \u2192 Data Export \u2192 Export Database</li> </ul>"},{"location":"user-guide/formats/#schema-structure","title":"\ud83d\udcd1 Schema Structure","text":"<pre><code>-- BgReadings Table\ntimestamp          -- UTC timestamp\ncalculated_value   -- Glucose in mg/dL\nraw_data          -- Raw sensor data\n\n-- Treatments Table\ntimestamp    -- UTC timestamp\ninsulin      -- Insulin dose in units\ninsulinJSON  -- Insulin type metadata\ncarbs       -- Carbohydrates in grams\nnotes       -- Treatment notes\n</code></pre>"},{"location":"user-guide/formats/#other-formats-coming-soon","title":"\ud83d\udd04 Other Formats (Coming Soon)","text":"<ul> <li>Dexcom CSV Export</li> <li>Freestyle Libre CSV</li> <li>Nightscout Data</li> </ul>"},{"location":"user-guide/formats/#add-custom-file-formats","title":"Add Custom File Formats","text":"<p>Check out our API and developer guide if you would like to add your own formats to the program.</p>"}]}