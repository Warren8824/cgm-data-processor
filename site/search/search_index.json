{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"CGM Data Processor <p>A robust Python framework for processing and analyzing diabetes device data</p> <p> </p>"},{"location":"#process-your-diabetes-data","title":"\ud83d\udcc8 Process Your Diabetes Data","text":"<p>Analyze data from multiple diabetes management systems including XDrip+, Dexcom, and Freestyle Libre. Handle CGM readings, insulin doses, carbs, and treatment notes with confidence.</p>"},{"location":"#cgm-analysis","title":"CGM Analysis","text":"<ul> <li>Gap detection</li> <li>Noise filtering</li> <li>Quality metrics</li> </ul>"},{"location":"#treatment-data","title":"\ud83d\udc89 Treatment Data","text":"<ul> <li>Insulin doses</li> <li>Carb intake</li> <li>Event notes</li> </ul>"},{"location":"#advanced-features","title":"\ud83d\ude80 Advanced Features","text":"<ul> <li>Automated format detection</li> <li>Data alignment</li> <li>Flexible export options</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>from src.core.format_registry import FormatRegistry\nfrom src.file_parser.format_detector import FormatDetector\nfrom src.processors import DataProcessor\n\n# Initialize format detection\nregistry = FormatRegistry()\ndetector = FormatDetector(registry)\n\n# Process file\nformat, _, _ = detector.detect_format(\"my_data.sqlite\")\nprocessed_data = process_file(\"my_data.sqlite\")\n</code></pre>"},{"location":"#key-features","title":"\ud83d\udca1 Key Features","text":"<ul> <li>Automated format detection for multiple data sources</li> <li>Robust data validation and cleaning</li> <li>Gap detection and interpolation for CGM data</li> <li>Treatment classification and verification</li> <li>Flexible data export options</li> </ul>"},{"location":"#responsible-use","title":"\ud83d\udee1\ufe0f Responsible Use","text":"This tool is designed for data analysis only. Not intended for real-time monitoring or medical decision making. Always consult healthcare providers for medical advice."},{"location":"getting-started/","title":"Overview","text":"Getting Started with CGM Data Processor <p>Process your diabetes device data in minutes</p>"},{"location":"getting-started/#overview","title":"\ud83c\udfaf Overview","text":"<p>CGM Data Processor is a Python framework that helps you:</p> <ul> <li>Import data from multiple diabetes management systems</li> <li>Process and align CGM readings with treatment data</li> <li>Export cleaned, validated datasets for analysis</li> </ul>"},{"location":"getting-started/#requirements","title":"\ud83d\udccb Requirements","text":"<ul> <li>Python 3.10 or higher</li> <li>Supported data formats: SQLite, CSV, XML</li> <li>Basic Python knowledge for custom analysis</li> </ul>"},{"location":"getting-started/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<ul> <li>Installation Guide - Set up the package</li> <li>Basic Usage - Process your first dataset</li> <li>Data Import - Learn about supported formats</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":"Installation <p>Set up CGM Data Processor for development</p>"},{"location":"getting-started/installation/#development-setup","title":"\ud83d\udee0\ufe0f Development Setup","text":"<ul> <li>Python 3.10+ required</li> <li>Poetry for dependency management</li> <li>Git for version control</li> </ul> <pre><code># Clone repository\ngit clone https://github.com/Warren8824/cgm-data-processor.git\ncd cgm-data-processor\n\n# Install dependencies\npoetry install\n\n# Setup pre-commit hooks\npoetry run pre-commit install\n</code></pre> <p>\u2705 Verify Installation</p> <pre><code>from src.core.format_registry import FormatRegistry\n\n# Should print available formats\nregistry = FormatRegistry()\nprint(registry.formats)\n</code></pre>"},{"location":"getting-started/quickstart/basic/","title":"Basic Usage","text":"Basic Usage <p>Understanding and configuring data processing</p>"},{"location":"getting-started/quickstart/basic/#command-line-usage","title":"\ud83d\ude80 Command Line Usage","text":"<p>The simplest way to get started with CGM Data Processor is to install the application and run the cli.py from the terminal.</p> <pre><code># Basic usage\npython -m src.cli path/your_data_export.sqlite\n\n# With custom parameters\npython -m src.cli path/your_data_export.sqlite --debug --bolus-limit 12 --output export/path \n\n# Optional arguments\n    --debug # Show additional processing information\n    --interpolation-limit 6 # Set the max CGM gap size to be interpolated(default = 4)\n    --bolus-limit 10.0 # Set a limit on what insulin doses are classed as bolus(default = 8)\n    --max-dose 20 # Set the maximum insulin dose, all over will be discarded(default = 15)\n    --output ./my_analysis # Set the output directory to save your processed data\n</code></pre>"},{"location":"getting-started/quickstart/basic/#core-usage","title":"\ud83d\udcca Core Usage","text":"<pre><code>from pathlib import Path\nfrom src.core.aligner import Aligner\nfrom src.core.format_registry import FormatRegistry\nfrom src.core.exceptions import ProcessingError\nfrom src.file_parser.format_detector import FormatDetector\nfrom src.processors import DataProcessor\n\ndef process_data(file_path: str, \n                interpolation_limit: int = 4,\n                bolus_limit: float = 8.0,\n                max_dose: float = 15.0):\n    \"\"\"\n    Process diabetes device data with custom parameters\n\n    Args:\n        file_path: Path to data file\n        interpolation_limit: Max CGM gaps to interpolate (4 = 20 mins)\n        bolus_limit: Max insulin units for bolus classification\n        max_dose: Maximum valid insulin dose\n    \"\"\"\n    registry = FormatRegistry()\n    detector = FormatDetector(registry)\n\n    # Detect format\n    format, error, _ = detector.detect_format(Path(file_path))\n    if not format:\n        raise ProcessingError(f\"No valid format detected: {error}\")\n\n    # Process with custom parameters\n    processor = DataProcessor()\n    processed_data = processor.process_tables(\n        table_data=table_data, \n        detected_format=format,\n        cgm_params={'interpolation_limit': interpolation_limit},\n        insulin_params={\n            'bolus_limit': bolus_limit,\n            'max_limit': max_dose\n        }\n    )\n\n    return processed_data\n</code></pre>"},{"location":"getting-started/quickstart/basic/#configuration-options","title":"\u2699\ufe0f Configuration Options","text":"<ul> <li>interpolation_limit: Number of missing CGM readings to interpolate</li> <li>bolus_limit: Threshold for classifying insulin as bolus vs basal</li> <li>max_dose: Maximum valid insulin dose (higher values discarded)</li> </ul>"},{"location":"getting-started/quickstart/import/","title":"Data Import","text":"Data Import <p>Supported formats and data sources</p>"},{"location":"getting-started/quickstart/import/#supported-devices","title":"\ud83d\udcf1 Supported Devices","text":"<ul> <li>XDrip+ (SQLite format)</li> <li>Dexcom (CSV format - coming soon)</li> <li>Freestyle Libre (CSV format - coming soon)</li> </ul>"},{"location":"getting-started/quickstart/import/#xdrip-export-guide","title":"\ud83d\udcbe XDrip+ Export Guide","text":"<ul> <li>Open XDrip+</li> <li>Navigate to Settings \u2192 Data Export</li> <li>Select \"Export Database\"</li> <li>Save the .sqlite file</li> </ul>"},{"location":"getting-started/quickstart/import/#data-requirements","title":"\ud83d\udd0d Data Requirements","text":"<ul> <li>CGM readings with timestamps</li> <li>Treatment records (insulin, carbs)</li> <li>No missing required columns</li> <li>Valid data ranges for readings</li> </ul>"},{"location":"getting-started/quickstart/processing/","title":"Data Processing","text":"Data Processing <p>Understanding how your data is processed</p>"},{"location":"getting-started/quickstart/processing/#processing-steps","title":"\ud83d\udd04 Processing Steps","text":"<ul> <li>Format Detection: Identifies your data source</li> <li>Data Validation: Checks for required information</li> <li>CGM Processing: Handles gaps and noise</li> <li>Treatment Analysis: Classifies insulin doses</li> <li>Data Alignment: Synchronizes all readings</li> </ul>"},{"location":"getting-started/quickstart/processing/#output-structure","title":"\ud83d\udcca Output Structure","text":"<ul> <li>complete_dataset/: Full processed data</li> <li>monthly/: Data split by month</li> <li>processing_notes.json: Quality metrics</li> </ul>"},{"location":"getting-started/quickstart/processing/#quality-checks","title":"\u2699\ufe0f Quality Checks","text":"<ul> <li>CGM gap detection (&gt;20 minutes)</li> <li>Insulin dose validation</li> <li>Timestamp alignment</li> <li>Data completeness metrics</li> </ul>"}]}